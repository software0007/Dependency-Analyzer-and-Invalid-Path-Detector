import tkinter as tk
from tkinter import filedialog, scrolledtext, Toplevel

# Custom button with hover effect
class HoverButton(tk.Button):
    def __init__(self, master=None, **kw):
        tk.Button.__init__(self, master=master, **kw)
        self.defaultBackground = self["background"]
        self.bind("<Enter>", self.on_enter)
        self.bind("<Leave>", self.on_leave)

    def on_enter(self, e):
        self["background"] = "#3cb371"  # Green on hover

    def on_leave(self, e):
        self["background"] = self.defaultBackground

class SemDDAApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Dependency Analyzer GUI")
        self.root.geometry("700x500")
        self.root.configure(bg="#2f2f2f")  # dark grey

        label_fg = "white"
        entry_bg = "#3a3a3a"
        entry_fg = "white"
        button_bg = "#444"
        output_bg = "#1e1e1e"
        output_fg = "white"

        # Input File
        tk.Label(root, text="Input File:", bg="#2f2f2f", fg=label_fg).grid(row=0, column=0, sticky="e")
        self.input_entry = tk.Entry(root, width=50, bg=entry_bg, fg=entry_fg, insertbackground="white")
        self.input_entry.grid(row=0, column=1, padx=5, pady=5)
        HoverButton(root, text="browse", bg=button_bg, fg="white", command=self.browse_input).grid(row=0, column=2)

        # Database File
        tk.Label(root, text="Database File:", bg="#2f2f2f", fg=label_fg).grid(row=1, column=0, sticky="e")
        self.db_entry = tk.Entry(root, width=50, bg=entry_bg, fg=entry_fg, insertbackground="white")
        self.db_entry.grid(row=1, column=1, padx=5, pady=5)
        HoverButton(root, text="browse", bg=button_bg, fg="white", command=self.browse_db).grid(row=1, column=2)

        # Buttons
        HoverButton(root, text="Syntax", width=15, bg=button_bg, fg="white", command=self.load_syntax_file).grid(row=2, column=0, pady=10)
        HoverButton(root, text="Semantics", width=15, bg=button_bg, fg="white", command=self.open_semantics_window).grid(row=2, column=1)

        # Output area
        self.output = scrolledtext.ScrolledText(root, width=80, height=20, bg=output_bg, fg=output_fg, insertbackground="white")
        self.output.grid(row=3, column=0, columnspan=3, padx=10, pady=10)

    def browse_input(self):
        file = filedialog.askopenfilename(title="Select JSP File")
        if file:
            self.input_entry.delete(0, tk.END)
            self.input_entry.insert(0, file)

    def browse_db(self):
        file = filedialog.askopenfilename(title="Select DB File")
        if file:
            self.db_entry.delete(0, tk.END)
            self.db_entry.insert(0, file)

    def load_syntax_file(self):
        file = filedialog.askopenfilename(title="Open Syntax File", filetypes=[("Text files", "*.txt"), ("All files", "*.*")])
        if file:
            with open(file, 'r') as f:
                content = f.read()
                self.output.delete("1.0", tk.END)
                self.output.insert(tk.END, content)

    def open_semantics_window(self):
        sem_window = Toplevel(self.root)
        sem_window.title("Select Option")
        sem_window.geometry("500x300")
        sem_window.configure(bg="#2f2f2f")

        sem_output = scrolledtext.ScrolledText(sem_window, width=60, height=10, bg="#1e1e1e", fg="white", insertbackground="white")
        sem_output.pack(pady=10)

        def load_polyhedron_file():
            file = filedialog.askopenfilename(title="Open Polyhedron File", filetypes=[("Text files", "*.txt"), ("All files", "*.*")])
            if file:
                with open(file, 'r') as f:
                    content = f.read()
                    sem_output.delete("1.0", tk.END)
                    sem_output.insert(tk.END, content)

        def load_interval_file():
            file = filedialog.askopenfilename(title="Open Interval File", filetypes=[("Text files", "*.txt"), ("All files", "*.*")])
            if file:
                with open(file, 'r') as f:
                    content = f.read()
                    sem_output.delete("1.0", tk.END)
                    sem_output.insert(tk.END, content)

        HoverButton(sem_window, text="Polyhedron", width=20, bg="#444", fg="white", command=load_polyhedron_file).pack(pady=5)
        HoverButton(sem_window, text="Interval Domain", width=20, bg="#444", fg="white", command=load_interval_file).pack(pady=5)

# Run the application
if __name__ == "__main__":
    root = tk.Tk()
    app = SemDDAApp(root)
    root.mainloop()
